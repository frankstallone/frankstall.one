---
import { getCollection, type CollectionEntry } from 'astro:content';
import type { GetStaticPaths, Page } from 'astro';
import Layout from '../layouts/Layout.astro';

type Props = {
  page: Page<CollectionEntry<'blog'>>;
};

export const getStaticPaths: GetStaticPaths = async ({ paginate }) => {
  const allPosts = (await getCollection('blog')).sort(
    (a, b) => b.data.publishDate.valueOf() - a.data.publishDate.valueOf(),
  );
  return paginate(allPosts, { pageSize: 5 });
};
// All paginated data is passed on the "page" prop
const { page } = Astro.props;
---

<Layout
  meta={{
    title: 'Frank Stallone | Sharing 25 years of working on the web',
    description:
      'For the last two decades, I have helped businesses of all sizes craft compelling user experiences that drove 100M+ in revenue.',
  }}
>
  <section class="region wrapper flow prose" style="--measure: 75ch;" id="main">
    {
      page.data.map((post) => (
        <div class="flow prose post-card" style="--spot-color: var(--gray-2)">
          <h2>
            <a href={`/${post.collection}/${post.slug}/`}>{post.data.title}</a>
          </h2>
          <p>
            <small
              class="uppercase step--2 font-weight-medium font-date tracking-l"
              style="color: var(--gray-9);"
            >
              {new Date(post.data.publishDate).toLocaleDateString(undefined, {
                weekday: 'long',
                year: 'numeric',
                month: 'long',
                day: 'numeric',
              })}
            </small>
          </p>
          <p>{post.data.description}</p>
          <p>
            <a href={`/${post.collection}/${post.slug}/`}>Read more &hellip;</a>
          </p>
        </div>
      ))
    }
    <aside class="flex justify-between" style="--measure: 75ch;">
      <p>Page {page.currentPage} of {page.total}</p>
      <p>
        {
          page.url.prev ? (
            <span>
              <a href={page.url.prev}>⏮ Previous</a> &mdash;{' '}
            </span>
          ) : null
        }
        {page.url.next ? <a href={page.url.next}>Next ⏭</a> : null}
      </p>
    </aside>
  </section>
</Layout>
