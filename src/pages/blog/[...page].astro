---
import { getCollection, type CollectionEntry } from 'astro:content'
import type { Page } from 'astro'
import InnerLayout from '../../layouts/InnerLayout.astro'

export const getStaticPaths = async ({ paginate }: { paginate: Function }) => {
  const allPosts = (await getCollection('blog')).sort(
    (a, b) => b.data.publishDate.valueOf() - a.data.publishDate.valueOf()
  )
  return paginate(allPosts, { pageSize: 10 })
}

interface Props {
  page: Page<CollectionEntry<'blog'>>
}

const { page } = Astro.props
const canonicalURL = new URL(Astro.url.pathname, Astro.site)
---

<InnerLayout
  meta={{
    title: 'Blog posts by Frank Stallone',
    description:
      'The writing of Frank Stallone, a UX Enginineer living in the Northeast',
    canonicalURL: canonicalURL.href,
  }}
>
  <section
    class="box flow md:pt-zero md:-mt-xs lg:-mt-xl bg-transparent"
    id="main"
  >
    <div class="grid" style="--grid-min-item-size: min(400px, 60%);">
      {
        page.data.map((post) => (
          <div class="flow prose post-card text-gray-1200 bg-gray-400 border-solid border-b-2 border-x-0 border-t-0 border-gray-700 rounded-md">
            <h3 class="mt-zero">
              <a
                href={`/${post.collection}/${post.id}/`}
                style={`view-transition-name: blog ${post.data.title}`}
              >
                {post.data.title}
              </a>
            </h3>
            <p class="mt-2xs ">
              <small class="uppercase text-step-00 font-medium font-mono tracking-wide text-gray-900">
                {new Date(post.data.publishDate).toLocaleDateString(undefined, {
                  weekday: 'long',
                  year: 'numeric',
                  month: 'long',
                  day: 'numeric',
                })}
              </small>
            </p>
            <p>{post.data.description}</p>
            <p class="pb-l">
              <a href={`/${post.collection}/${post.id}/`}>Read more &hellip;</a>
            </p>
          </div>
        ))
      }
    </div>
    <nav
      class="flex justify-between items-center mt-l font-mono text-step-000 uppercase font-medium text-gray-900"
    >
      {
        page.url.prev ? (
          <a href={page.url.prev}>← Previous</a>
        ) : (
          <span class="text-gray-700">← Previous</span>
        )
      }
      <span>
        Page {page.currentPage} of {page.lastPage}
      </span>
      {
        page.url.next ? (
          <a href={page.url.next}>Next →</a>
        ) : (
          <span class="text-gray-700">Next →</span>
        )
      }
    </nav>
  </section>
</InnerLayout>
