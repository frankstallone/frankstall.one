/* 
  Global styles 

  Low-specificity, global styles that apply to the whole 
  project: https://cube.fyi/css.html
*/
body {
  @apply font-base font-light text-gray-1400 m-zero text-step-0;
}

/* Base interactive elements */

a {
  color: currentcolor;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

/* Baseline for default links */
a:not([class]) {
  /* Relatively sized thickness and offset */
  text-decoration-thickness: max(0.08em, 1px);
  text-underline-offset: 0.15em;
}

p,
li,
blockquote:not([class]) {
  max-inline-size: 50ch;
}

/* Base typesetting */
h1,
h2,
h3,
h4,
h5,
h6 {
  @apply font-display leading-fine font-medium tracking-tight;
}

h1 {
  @apply text-step-5;
}

h2 {
  @apply text-step-3;
}

h3 {
  @apply text-step-2;
}

h4 {
  @apply text-step-1;
}

/* Scroll padding allowance below focused elements 
  to ensure they are clearly in view */
:focus {
  scroll-padding-block-end: 8vh;
}

:focus-visible {
  --outline-size: max(2px, 0.15em);

  outline: var(--outline-width, var(--outline-size)) var(--outline-style, solid)
    var(--outline-color, currentColor);
  outline-offset: var(--outline-offset, var(--outline-size));
}

/* Scroll padding allowance above anchor links */
:target {
  scroll-padding-block-start: 2rem;
}

main:focus {
  outline: none;
}

/* Base selection styles that invert whatever colours are rendered */
::selection {
  @apply bg-gray-1400 text-gray-100;
}

form > p {
  display: flex;
  flex-flow: column nowrap;
}

form > p label {
  margin-block-end: 0.5rem;
  margin-inline-end: 0.5rem;
}

input,
textarea {
  border: 1px solid var(--gray-8);
  padding-block: var(--space-2xs);
  padding-inline: var(--space-xs);
}

input:focus,
textarea:focus {
  outline: 2px solid var(--gray-11);
}

svg {
  height: 0.8lh;
  width: auto;
  flex: none;
}

[role='list'] {
  padding: 0;
}

@layer components {
  /* Main navigation buttons */
  .header-link a {
    @apply text-gray-200 no-underline inline-block;
  }

  .header-link a:hover,
  .header-link a:focus,
  .header-link a:active {
    @apply text-gray-400 underline;
    text-decoration-thickness: max(0.15em, 1px);
  }

  /* Accordion */
  .accordion-body {
    margin-block-start: var(--space-s);
  }

  /* Footer */

  footer {
    color: var(--gray-2);
  }

  footer small {
    font-size: var(--step--2);
  }

  footer a,
  footer a:visited {
    text-decoration: none;
    transition: var(--transition-base);
  }
  footer a:hover,
  footer a:focus,
  footer a:active {
    color: var(--gray-7);
    text-decoration: none;
  }

  @keyframes fade-in {
    from {
      scale: 0.75;
      opacity: 0.15;
    }
    to {
      scale: 1;
      opacity: 1;
    }
  }
  @keyframes fade-to {
    to {
      scale: 1;
      opacity: 1;
    }
  }

  @supports (animation-timeline: view()) {
    @media (prefers-reduced-motion: no-preference) {
      img,
      .animate-in {
        scale: 0.75;
        opacity: 0.15;
        animation: fade-in linear forwards;
        animation-timeline: view();
        animation-range-start: entry 20%;
        animation-range-end: cover 30%;
      }
    }
  }

  #hero {
    background-color: var(--gray-12);
    background-repeat: no-repeat;
    background-size: cover;
  }

  /* Homepage section headers */

  .section-header {
    @apply bg-white text-gray-1400 px-s py-xs m-zero;
  }

  .grid-recent {
    --grid-min-item-size: 75%;
  }

  @media screen(md) {
    .grid-recent {
      --grid-min-item-size: min(500px, 40%);
    }
    .section-header {
      writing-mode: vertical-lr;
      grid-column-start: 3;
      grid-row-start: 1;
    }
  }
}

/* Thank you to Radix
https://cdn.jsdelivr.net/npm/@radix-ui/colors@latest/ */

/* :root {
  --violet-1: #fdfcfe;
  --violet-2: #faf8ff;
  --violet-3: #f4f0fe;
  --violet-4: #ebe4ff;
  --violet-5: #e1d9ff;
  --violet-6: #d4cafe;
  --violet-7: #c2b5f5;
  --violet-8: #aa99ec;
  --violet-9: #6e56cf;
  --violet-10: #654dc4;
  --violet-11: #6550b9;
  --violet-12: #2f265f;
  --gray-1: #fcfcfc;
  --gray-2: #f9f9f9;
  --gray-3: #f0f0f0;
  --gray-4: #e8e8e8;
  --gray-5: #e0e0e0;
  --gray-6: #d9d9d9;
  --gray-7: #cecece;
  --gray-8: #bbbbbb;
  --gray-9: #8d8d8d;
  --gray-10: #838383;
  --gray-11: #646464;
  --gray-12: #202020;
}

@supports (color: color(display-p3 1 1 1)) {
  @media (color-gamut: p3) {
    :root {
      --violet-1: color(display-p3 0.991 0.988 0.995);
      --violet-2: color(display-p3 0.978 0.974 0.998);
      --violet-3: color(display-p3 0.953 0.943 0.993);
      --violet-4: color(display-p3 0.916 0.897 1);
      --violet-5: color(display-p3 0.876 0.851 1);
      --violet-6: color(display-p3 0.825 0.793 0.981);
      --violet-7: color(display-p3 0.752 0.712 0.943);
      --violet-8: color(display-p3 0.654 0.602 0.902);
      --violet-9: color(display-p3 0.417 0.341 0.784);
      --violet-10: color(display-p3 0.381 0.306 0.741);
      --violet-11: color(display-p3 0.383 0.317 0.702);
      --violet-12: color(display-p3 0.179 0.15 0.359);
      --gray-1: color(display-p3 0.988 0.988 0.988);
      --gray-2: color(display-p3 0.975 0.975 0.975);
      --gray-3: color(display-p3 0.939 0.939 0.939);
      --gray-4: color(display-p3 0.908 0.908 0.908);
      --gray-5: color(display-p3 0.88 0.88 0.88);
      --gray-6: color(display-p3 0.849 0.849 0.849);
      --gray-7: color(display-p3 0.807 0.807 0.807);
      --gray-8: color(display-p3 0.732 0.732 0.732);
      --gray-9: color(display-p3 0.553 0.553 0.553);
      --gray-10: color(display-p3 0.512 0.512 0.512);
      --gray-11: color(display-p3 0.392 0.392 0.392);
      --gray-12: color(display-p3 0.125 0.125 0.125);
    }
  }
} */

/* html {
  scroll-behavior: smooth;
}

body {
  color: var(--color-dark);
  background: var(--color-light);
  font-size: var(--step-0);
  font-family: var(--font-base);
  font-weight: var(--font-base-weight);
  line-height: var(--line-height);
  letter-spacing: var(--tracking);
  position: relative;
} */

/* Set line lengths */
/* p,
li,
blockquote:not([class]) {
  max-inline-size: 50ch;
}

h1,
h2,
h3 {
  max-inline-size: 30ch;
} */

/* More generic elements */
/* blockquote:not([class]) {
  font-size: var(--step-1);
  margin-inline-start: var(--space-m);
} */

/* Markdown blockquote:not([class])s aren't ideal, so we're presuming the person quoted is the last p */
/* blockquote:not([class]) p:last-of-type {
  font-family: var(--font-base);
  font-size: var(--step-1);
  font-weight: normal;
} */
